@model PaginatedList<DAL.Models.Country>

@{
    ViewData["Title"] = "Country";
}

<h1>Country</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>

<div class="table-responsive">
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr style="background-color: #007BFF; color: white;">
                <th>Country code</th>
                <th>Country name</th>
                <th>Edit country</th>
                <th>Delete country</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Code)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        </div>
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        Page @(Model.PageIndex) of @Model.TotalPages

        @if (Model.HasPreviousPage)
        {
            <a href="@Url.Action("Index", new { page = Model.PageIndex - 1, pageSize = Model.PageSize })" class="btn btn-primary">Previous</a>
        }
        else
        {
            <span class="btn btn-primary">Previous</span>
        }

        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("Index", new { page = Model.PageIndex + 1, pageSize = Model.PageSize })" class="btn btn-primary">Next</a>
        }
        else
        {
            <span class="btn btn-primary">Next</span>
        }
    </div>
</div>
